---
import Icon from "astro-icon";

interface Props {
  size?: "md" | "lg";
}

const { size = "md" } = Astro.props;
---

<astro-heart>
<button
  type="button"
  class="text-green-500 hover:scale-105 rounded-full flex items-center justify-center alert"
  class:list={[size === "md" && "h-12 w-12", size === "lg" && "h-14 w-14"]}
>
  <Icon
    name="mdi:heart"
    class:list={[size === "md" && "h-8 w-8", size === "lg" && "h-10 w-10"]}
  />
</button>
</astro-heart>

<script>
  // Define the behaviour for our new type of HTML element.
  class AstroHeart extends HTMLElement {
    constructor() {
      super();
      let count = 0;

      const heartButton = this.querySelector('button');
      const countSpan = this.querySelector('span');

      // Each time the button is clicked, update the count.
      heartButton.addEventListener('click', () => {
        count++;
        countSpan.textContent = count.toString();
        alert('Added to liked songs!');
      });
    }
  }

  // Tell the browser to use our AstroHeart class for <astro-heart> elements.
  customElements.define('astro-heart', AstroHeart);
</script>
